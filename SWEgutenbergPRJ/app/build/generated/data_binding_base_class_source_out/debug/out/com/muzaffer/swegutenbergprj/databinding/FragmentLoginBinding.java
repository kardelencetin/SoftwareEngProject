// Generated by view binder compiler. Do not edit!
package com.muzaffer.swegutenbergprj.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.muzaffer.swegutenbergprj.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnRegLogin;

  @NonNull
  public final Button buttonLogin;

  @NonNull
  public final CardView cardView2;

  @NonNull
  public final ConstraintLayout loginLayout;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final View view;

  private FragmentLoginBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnRegLogin,
      @NonNull Button buttonLogin, @NonNull CardView cardView2,
      @NonNull ConstraintLayout loginLayout, @NonNull TextView textView2,
      @NonNull TextView textView3, @NonNull View view) {
    this.rootView = rootView;
    this.btnRegLogin = btnRegLogin;
    this.buttonLogin = buttonLogin;
    this.cardView2 = cardView2;
    this.loginLayout = loginLayout;
    this.textView2 = textView2;
    this.textView3 = textView3;
    this.view = view;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnRegLogin;
      Button btnRegLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnRegLogin == null) {
        break missingId;
      }

      id = R.id.buttonLogin;
      Button buttonLogin = ViewBindings.findChildViewById(rootView, id);
      if (buttonLogin == null) {
        break missingId;
      }

      id = R.id.cardView2;
      CardView cardView2 = ViewBindings.findChildViewById(rootView, id);
      if (cardView2 == null) {
        break missingId;
      }

      ConstraintLayout loginLayout = (ConstraintLayout) rootView;

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new FragmentLoginBinding((ConstraintLayout) rootView, btnRegLogin, buttonLogin,
          cardView2, loginLayout, textView2, textView3, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
