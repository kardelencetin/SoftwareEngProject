// Generated by view binder compiler. Do not edit!
package com.kardelencetin.gutenbergmobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.kardelencetin.gutenbergmobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentBooksRecyclerViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView btnSearch;

  @NonNull
  public final TextInputEditText etQuery;

  @NonNull
  public final FrameLayout frameLayout;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView rvUser;

  private FragmentBooksRecyclerViewBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView btnSearch, @NonNull TextInputEditText etQuery,
      @NonNull FrameLayout frameLayout, @NonNull ProgressBar progressBar,
      @NonNull RecyclerView rvUser) {
    this.rootView = rootView;
    this.btnSearch = btnSearch;
    this.etQuery = etQuery;
    this.frameLayout = frameLayout;
    this.progressBar = progressBar;
    this.rvUser = rvUser;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBooksRecyclerViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBooksRecyclerViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_books_recycler_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBooksRecyclerViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_search;
      ImageView btnSearch = ViewBindings.findChildViewById(rootView, id);
      if (btnSearch == null) {
        break missingId;
      }

      id = R.id.et_query;
      TextInputEditText etQuery = ViewBindings.findChildViewById(rootView, id);
      if (etQuery == null) {
        break missingId;
      }

      id = R.id.frameLayout;
      FrameLayout frameLayout = ViewBindings.findChildViewById(rootView, id);
      if (frameLayout == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.rv_user;
      RecyclerView rvUser = ViewBindings.findChildViewById(rootView, id);
      if (rvUser == null) {
        break missingId;
      }

      return new FragmentBooksRecyclerViewBinding((ConstraintLayout) rootView, btnSearch, etQuery,
          frameLayout, progressBar, rvUser);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
